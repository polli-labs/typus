[project]
name            = "polli-typus"
version         = "0.4.0"
description     = "Taxonomic types, projections and async taxonomy services for Polli-Labs."
readme          = { file = "README.md", content-type = "text/markdown" }
license         = "MIT"
authors         = [{ name = "Polli-Labs", email = "caleb@polli.ai" }]
requires-python = ">=3.10"

keywords = ["taxonomy", "ecology", "pydantic", "sqlalchemy"]

classifiers = [
  "Development Status :: 3 - Alpha",
  "Intended Audience :: Science/Research",
  "License :: OSI Approved :: MIT License",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Topic :: Scientific/Engineering :: Information Analysis",
]

# --- core runtime (no heavy DB drivers) --------------------------------------
dependencies = [
    "pydantic>=2.7,<3",
    "sqlalchemy[asyncio]>=2.0,<3",
    "rapidfuzz>=3.6,<4",
    "polars>=0.20,<2",
    "pandas>=2.0,<3",
    "requests>=2.32,<4",
]

[project.optional-dependencies]
# install with:  pip install typus[postgres]
postgres = ["asyncpg>=0.29"]

# pip install typus[sqlite]
sqlite   = ["aiosqlite>=0.19"]

# pip install typus[pgvector]
pgvector = ["psycopg-binary>=3.1"]

# pip install typus[dev]   (ruff, pytest, pre-commit …)
dev = [
  "ruff==0.4.4",
  "pytest>=8.2",
  "pytest-asyncio>=0.23",
  "pre-commit>=3.7",
  "asyncpg>=0.29",
  "aiosqlite>=0.19",
  "pyarrow>=16,<17",
  "mkdocs>=1.6,<2",
  "mkdocs-material>=9.5,<10",
  "pytest-httpserver>=1.0",
  "tqdm>=4.66"
]

# Docs extra – everything you need to run `mkdocs build` or `mkdocs serve`
docs = ["mkdocs>=1.6,<2", "mkdocs-material>=9.5,<10"]

[project.urls]
Homepage   = "https://github.com/polli-labs/typus"
Issues     = "https://github.com/polli-labs/typus/issues"

[project.scripts]
typus-load-sqlite = "typus.services.sqlite_loader:main"
typus-pg-ensure-indexes = "typus.services.pg_index_helper:cli"

# ---------------------------------------------------------------------------
# Build backend
# ---------------------------------------------------------------------------
[build-system]
requires      = ["hatchling>=1.18"]
build-backend = "hatchling.build"

[tool.hatch.metadata]
allow-plugins = true

[tool.hatch.build]
exclude = [
  "tests*",
  "scripts*",
  "dev*",            # Exclude development artifacts
  "**/*.tsv",
  "**/*.sql",
  "**/*.sqlite",
  "/.ruff_cache",
  "/.pytest_cache",
]

[tool.hatch.build.targets.wheel]
packages = ["typus"]  # <-- list form avoids Hatch warning

# ---------------------------------------------------------------------------
# Ruff & pytest
# ---------------------------------------------------------------------------
[tool.ruff]
line-length    = 100
target-version = "py310"        # matches requires-python
lint.extend-select  = ["I"]     # isort
lint.extend-ignore  = ["E501"]  # long lines handled by formatter

[tool.ruff.format]
quote-style = "double"
docstring-code-format = true

[tool.pytest.ini_options]
addopts    = "-q"
minversion = "7.0"
pythonpath = ["."]
markers    = ["asyncio"]
asyncio_mode = "auto"
