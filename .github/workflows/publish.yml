name: Build & publish

on:
  push:
    tags:
      - "v*"
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"
      - name: Set up uv
        uses: astral-sh/setup-uv@v3
      - name: Cache uv package cache
        uses: actions/cache@v4
        with:
          path: ~/.cache/uv
          key: ${{ runner.os }}-uv-3.10-${{ hashFiles('pyproject.toml', 'uv.lock') }}
          restore-keys: |
            ${{ runner.os }}-uv-3.10-
      - name: Install dependencies (dev + sqlite extras)
        run: |
          uv venv
          uv pip install -e ".[dev,sqlite]"
      - name: Lint (ruff)
        run: |
          uv run ruff format --check .
          uv run ruff check .
      - name: Run tests (SQLite fixture, no DSN)
        env:
          TYPUS_ELEVATION_TEST: "0"
        run: |
          uv run pytest -q -k "not test_async_compatibility and not ancestry_verification and not ancestor_descendant_distance and not perf_name_search_local"

  build-and-publish:
    needs: test
    runs-on: ubuntu-latest
    permissions:
      contents: write  # needed to upload release asset
      id-token: write  # for OIDC (if you prefer it)
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install build tools
        run: |
          python -m pip install -U pip
          pip install hatchling hatch twine build

      - name: Build wheel
        run: hatch build -t wheel

      - name: Publish to TestPyPI
        if: startsWith(github.ref, 'refs/tags/v')
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.TEST_PYPI_API_KEY }}
        run: twine upload -r testpypi dist/*.whl

      - name: Publish to PyPI
        if: startsWith(github.ref, 'refs/tags/v') && github.repository == 'polli-labs/typus'
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_API_KEY }}
        run: twine upload dist/*.whl

      - name: Upload wheel as GitHub release asset
        if: startsWith(github.ref, 'refs/tags/v')
        uses: softprops/action-gh-release@v2
        with:
          files: dist/*.whl

  deploy-docs:
    name: Deploy Docs to VPS
    runs-on: ubuntu-latest
    needs: build-and-publish
    if: startsWith(github.ref, 'refs/tags/v') || github.event_name == 'workflow_dispatch'
    concurrency:
      group: docs-deploy
      cancel-in-progress: true
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with: { python-version: '3.12' }
      - run: |
          python -m pip install -U pip
          pip install -e ".[docs]"
      - run: mkdocs build
      - uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.POLLISERVE0_SSH_PRIVATE_KEY }}
      - name: Check SSH connectivity
        run: |
          echo "Checking SSH connectivity to docs host..."
          ssh -o StrictHostKeyChecking=no -o ConnectTimeout=10 \
            ${{ secrets.POLLISERVE0_SSH_USER }}@${{ secrets.POLLISERVE0_SSH_PUBLIC_HOST }} echo ok
      - run: |
          rsync -avz --delete \
            -e "ssh -o StrictHostKeyChecking=no" \
            site/ ${{ secrets.POLLISERVE0_SSH_USER }}@${{ secrets.POLLISERVE0_SSH_PUBLIC_HOST }}:/var/www/docs.polli.ai/html/typus/
